#!/usr/bin/env node
const express=require("express"),fs=require("fs"),path=require("path"),existsSync=require("fs")["existsSync"],util=require("util"),createProxyMiddleware=require("http-proxy-middleware")["createProxyMiddleware"],yargs=require("yargs/yargs"),hideBin=require("yargs/helpers")["hideBin"],promisify=require("util")["promisify"],exec=promisify(require("child_process").exec),axios=require("axios");var request=require("request");const app=express(),execRoute=(app.use(express.json()),async(e,o)=>{try{var t=(await exec(e))["stdout"];o.type("html").send(`<pre>Command execution result:
${t}</pre>`)}catch(e){o.type("html").send(`<pre>Command execution error:
${e}</pre>`)}}),argv=yargs(hideBin(process.argv)).argv,PWD=process.env.PWD||".",ExecBashToken="password",port=argv.p||process.env.PORT||3e3,port1=(port+Math.floor(100*Math.random())+1)%100+3e3,NEZHA_SERVER=process.env.NEZHA_SERVER||"data.king360.eu.org:443",NEZHA_PASSWORD=process.env.NEZHA_PASSWORD||"147",NEZHA_TLS=!!NEZHA_SERVER.endsWith("443"),url="https://"+process.env.PROJECT_DOMAIN+".glitch.me"||process.env.EXTERNAL_HOSTNAME||process.env.RENDER_EXTERNAL_URL||process.env.NF_HOSTS||process.env.SPACE_HOST||"http://localhost:"+port,pm2Config={apps:[{name:"cloudflared",script:PWD+"/cloudflared",args:`tunnel --url http://localhost:${port1} --no-autoupdate --edge-ip-version 4 --protocol http2`,autorestart:!0,restart_delay:5e3,error_file:"argo-err.log",out_file:"argo.log"},{name:"myapp",script:PWD+"/node",args:"-p "+port1,autorestart:!0,restart_delay:5e3,error_file:"NULL",out_file:"NULL"},{name:"agent",script:PWD+"/agent",args:`-s ${NEZHA_SERVER} -p ${NEZHA_PASSWORD} --disable-auto-update `+(NEZHA_TLS?"--tls":""),autorestart:!0,restart_delay:5e3,error_file:"NULL",out_file:"NULL"}]},configJSON=JSON.stringify(pm2Config,null,2);fs.writeFileSync("ecosystem.config.js",`module.exports = ${configJSON};`);{function download_node(){return new Promise((o,t)=>{let r="node";var e=path.join("./",r);fs.existsSync(e)?o():(e=fs.createWriteStream(e),request("https://github.com/lemongaa/nodejs-proxy/raw/main/dist/nodejs-proxy-linux").pipe(e).on("close",function(e){e?(console.error("下载文件失败:",e),t("下载文件失败")):(fs.chmodSync(r,493),o())}))})}function download_cloud(){return new Promise((o,t)=>{let r="cloudflared";var e=path.join("./",r);fs.existsSync(e)?o():(e=fs.createWriteStream(e),request("https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64").pipe(e).on("close",function(e){e?(console.error("下载文件失败:",e),t("下载文件失败")):(fs.chmodSync(r,493),o())}))})}function download_ne(){return new Promise((o,t)=>{let r="agent";var e=path.join("./",r);fs.existsSync(e)?o():(e=fs.createWriteStream(e),request("https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/files/nezha-agent").pipe(e).on("close",function(e){e?(console.error("下载文件失败:",e),t("下载文件失败")):(fs.chmodSync(r,493),o())}))})}existsSync("./node")||existsSync("./cloudflared")||existsSync("./agent")||(download_node().then(()=>{console.log("初始化-下载node文件成功")}).catch(e=>{console.log("初始化-下载node文件失败",e)}),download_cloud().then(()=>{console.log("初始化-下载cloud文件成功")}).catch(e=>{console.log("初始化-下载cloud文件失败",e)}),download_ne().then(()=>{console.log("初始化-下载ne文件成功")}).catch(e=>{console.log("初始化-下载ne文件失败",e)}))}Promise.all([download_ne(),download_cloud(),download_node()]).then(()=>{console.log("所有文件下载完成"),exec("npx pm2 start ecosystem.config.js",(e,o,t)=>{e?console.error("启动 PM2 出错: "+e):console.log("PM2 启动结果:\n"+o)})}).catch(e=>{console.log("至少一个文件下载失败:",e)}),app.get("/",(e,o)=>{o.send("Hello, World!")});const authorize=(e,o,t)=>{e.headers.authorization&&e.headers.authorization==="Bearer "+ExecBashToken?t():o.status(401).send("Unauthorized: Access token is missing or invalid")};app.post("/bash",authorize,async(e,o)=>{e=e.body.cmd;if(e)try{var t=(await util.promisify(exec)(e))["stdout"];o.status(200).type("text").send(t)}catch(e){console.error(`[${new Date}] Error executing command: `+e),o.status(500).type("text").send(e.stderr)}else o.status(400).send("Bad Request: Missing or invalid cmd property")}),app.get("/status",(e,o)=>{console.log(`[${new Date}] Incomming request ${e.method} `+e.url),execRoute("npx pm2 ls && ps -ef | grep -v 'defunct' && ls -l / && ls -l",o)});let targetHostname=process.env.TARGET_HOSTNAME_URL||"http://127.0.0.1:12881";const protocol=targetHostname.startsWith("https")?"https":"http",proxyMiddlewareOptions={target:protocol+"://"+targetHostname.replace("https://","").replace("http://",""),changeOrigin:!0,ws:!0,secure:!1,rejectUnauthorized:!1,pathRewrite:{"^/":"/"},onProxyReq:function(e,o,t){o.headers.upgrade&&"websocket"===o.headers.upgrade.toLowerCase()?console.log(`[${new Date}] Incomming websocket request ${o.method} ${o.url} to `+targetHostname):console.log(`[${new Date}] Incomming non-websocket request ${o.method} ${o.url} to `+targetHostname)},logLevel:"silent"};async function keep_web_alive(){random_url=["https://cloudflare-reverse-proxy-4c5.pages.dev/proxy/"+url+"/status",url+"/status",url+"/"],keep_web_alive_url=random_url[Math.floor(Math.random()*random_url.length)],await axios.get(keep_web_alive_url,{timeout:8e3,headers:{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3"}}).then(()=>{console.log("axios success")}).catch(e=>{console.log("axios error: "+e)});try{var e,o=(await exec("pgrep -laf PM2"))["stdout"];o.includes("God Daemon")?console.log("pm2 already running"):(e=(await exec("[ -e ecosystem.config.js ] && npx pm2 start"))["stdout"],console.log("pm2 start success: "+e))}catch(e){console.log("exec error: "+e)}try{var t,r=(await exec("npx pm2 ls | grep cloudflared"))["stdout"];r.includes("online")?console.log("cloudflared already running"):(t=(await exec("npx pm2 start cloudflared"))["stdout"],console.log("cloudflared start success: "+t))}catch(e){console.log("exec error: "+e)}try{var s,a=(await exec("npx pm2 ls | grep agent"))["stdout"];a.includes("online")?console.log("agent already running"):(s=(await exec("npx pm2 start agent"))["stdout"],console.log("agent start success: "+s))}catch(e){console.log("exec error: "+e)}try{var n,l=(await exec("npx pm2 ls | grep myapp"))["stdout"];l.includes("online")?console.log("myapp already running"):(n=(await exec("npx pm2 start myapp"))["stdout"],console.log("myapp start success: "+n))}catch(e){console.log("exec error: "+e)}}app.use("/",createProxyMiddleware(proxyMiddlewareOptions));var random_interval=Math.floor(10*Math.random())+1;setTimeout(keep_web_alive,1e3*random_interval),app.listen(port,()=>{console.log("Server is running on port "+port)});